name: Terraform

on:
  workflow_dispatch:
    inputs:
      exec:
        required: true
        type: string

jobs:
  plan:
    runs-on: ubuntu-latest
    if: ${{ inputs.exec == 'plan' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.8.3

    - name: Set up Yandex Cloud service account key
      working-directory: ./infra
      run: |
        echo "${{ secrets.YC_KEY_JSON }}" | base64 -d > ./authorized_key.json

    - name: Initialize Terraform
      working-directory: ./infra
      run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}

    - name: Terraform Plan
      working-directory: ./infra
      run: TF_LOG=DEBUG terraform plan
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TF_VAR_PUB_SSH_KEY: ${{ secrets.PUB_SSH_KEY }}
        TF_VAR_YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
        TF_VAR_YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
        TF_VAR_YC_ZONE: ${{ secrets.YC_ZONE }}


  apply:
    runs-on: ubuntu-latest
    if: ${{ inputs.exec == 'apply' }}
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: v1.11.2
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Yandex Cloud service account key
        working-directory: ./infra
        run: |
          echo "${{ secrets.YC_KEY_JSON }}" | base64 -d > ./authorized_key.json
      - name: Terraform init
        working-directory: ./infra
        run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      - name: Terraform apply
        working-directory: ./infra
        run: |
         terraform apply -auto-approve
        env:
          TF_VAR_PUB_SSH_KEY: ${{ secrets.PUB_SSH_KEY }}
          TF_VAR_YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_YC_ZONE: ${{ secrets.YC_ZONE }}

      - name: List all outputs (for debugging)
        run: terraform output
      
  destroy:
    runs-on: ubuntu-latest
    if: ${{ inputs.exec == 'destroy' }}
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: v1.11.2
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Yandex Cloud service account key
        working-directory: ./infra
        run: |
          echo "${{ secrets.YC_KEY_JSON }}" | base64 -d > ./authorized_key.json
      - name: Terraform init
        working-directory: ./infra
        run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      - name: Terraform destroy
        working-directory: ./infra
        run: terraform destroy -auto-approve
        env:
          TF_VAR_PUB_SSH_KEY: ${{ secrets.PUB_SSH_KEY }}
          TF_VAR_YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_YC_ZONE: ${{ secrets.YC_ZONE }}